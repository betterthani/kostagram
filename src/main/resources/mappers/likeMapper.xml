<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.sns.like.dao.LikeDAO">
 	<insert id="insertLikeByUserIdPostId" parameterType="map">
 		INSERT INTO `like`
 		(
 			`postId`
			,`userId`
 			,`createdAt`
 		)
 		VALUES
 		(
 			#{postId}
 			,#{userId}
 			,NOW()
 		)	
 	</insert>
 	
 	<delete id="deleteLikeByUserIdPostId" parameterType="int">
 		DELETE
		FROM
			`like`
		WHERE
			`postId` = #{postId}
			AND `userId` = #{userId}
 	</delete>
 	
 	<!-- 
 	좋아요 존재여부
 	<select id="existLike" parameterType="map" resultType="boolean">
 		SELECT
 			COUNT(*)
 		FROM
 			`like`
 		WHERE
			`postId` = #{postId}
			AND `userId` = #{userId}
 			
 	</select>
 	
 	좋아요 개수
 	<select id="selectLikeCountByPostId" parameterType="int" resultType="int">
 		SELECT
 			COUNT(*)
 		FROM
 			`like`
 		WHERE
			`postId` = #{postId}
 	</select> -->
 	
 	<!-- userId의 존재여부 합치기 ( 좋아요 개수 + 좋아요 존재여부 합친거)-->
 	<select id="selectLikeCountByPostIdOrUserId" parameterType="map" resultType="int">
 		SELECT
 			COUNT(*)
 		FROM
 			`like`
 		WHERE
			`postId` = #{postId}
			<if test="userId != null">
			AND `userId` = #{userId}
			</if>
 	</select>
 	
 	<!-- 좋아요 전체삭제(회원탈퇴시) -->
 	<delete id="deleteByUserId" parameterType="int">
 		DELETE
		FROM
			`like`
		WHERE
			`userId` = #{userId}
 	</delete>
 	
 	<!-- 좋아요 삭제(타임라인) -->
 	<delete id="deleteByPostIdUserId" parameterType="int">
 		DELETE
		FROM
			`like`
		WHERE
			`postId` = #{postId}
			AND `userId` = #{userId}
 	</delete>
 	
 </mapper>