<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.sns.post.dao.PostDAO">
 
 	<!-- 테스트 -->
 	<select id="selectPostListTest" resultType="map">
 		SELECT
 			*
 		FROM
 		 	`post`
 	</select>
 	
 	<!-- 글쓰기 -->
 	<insert id="insertPost" parameterType="map">
 		INSERT INTO `post`
 		(
	 		`userId`
			,`content`
			,`imgPath`
			,`createdAt`
			,`updatedAt`
 		)
 		VALUES
 		(
 			#{userId}
 			,#{content}
 			,#{imgPath}
 			,NOW()
 			,NOW()
 		)
 	</insert>
 	
 	<!-- 글 목록 -->
 	<select id="selectPostList" parameterType="int" resultType="com.sns.post.model.Post">
 		SELECT
 			`id`
			,`userId`
			,`content`
			,`imgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		
		ORDER BY `id` DESC
 	</select>
 	
 	<!-- 사용자 글 가져오기(개인홈페이지) -->
 	<select id="selectPostListByUserId" parameterType="int" resultType="com.sns.post.model.Post">
 		SELECT
 			`id`
			,`userId`
			,`content`
			,`imgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`userId` = #{userId}
		ORDER BY `id` DESC
 	</select>
 	
 	<!-- 게시글 개수 가져오기 -->
 	<select id="selectPostCountByUserId" parameterType="int" resultType="int">
 		SELECT
 			COUNT(*)
		FROM
			`post`
		WHERE
			`userId` = #{userId}
 	</select>
 	
 	<!-- 글 전체삭제(회원탈퇴시) -->
 	<delete id="deleteByUserId" parameterType="int">
 		DELETE FROM `post`
 		WHERE
 			`userId` = #{userId}
 	</delete>
 	
 	 
 	<!--글 가져오기(조회) -->
 	<select id="selectPostByPostIdUserId" parameterType="map" resultType="com.sns.post.model.Post">
 		SELECT
 			`id`
			,`userId`
			,`content`
			,`imgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`id` = #{postId}
			AND `userId` = #{userId}
 	</select>
 	
 	
 	<delete id="deleteByPostIdUserId" parameterType="map">
 		DELETE FROM `post`
 		WHERE
 			`userId` = #{userId}
 			AND `id` = #{postId}
 	</delete>
 	
 	
 	<!-- 글 한개 가져오기(글 상세) -->
 	<select id="selectPostByPostId" parameterType="int" resultType="com.sns.post.model.Post">
 		SELECT
 			`id`
			,`userId`
			,`content`
			,`imgPath`
			,`createdAt`
			,`updatedAt`
		FROM
			`post`
		WHERE
			`id` = #{postId}
 	</select>
 	
 	<!-- 프로필 수정 -->
 	<update id="postUpdate" parameterType="map">
 		UPDATE `post`
 		SET
 			`content`= #{content}
 			<if test="imgPath != null">
 			, `imgPath` = #{imgPath}
 			</if>
 			, `updatedAt` = NOW()
 		WHERE
 			`id` = #{postId}
 			AND	`userId` = #{userId}
 	</update>
 </mapper>